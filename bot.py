import os
import asyncio
import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, ChatJoinRequestHandler, CallbackQueryHandler, ContextTypes

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN
BOT_TOKEN = os.getenv("BOT_TOKEN")

# ===== –ù–ê–°–¢–†–û–ô–ö–ò =====

MEDIA_FILES = {
    "day0": "media/day0.jpg",  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    "day2": "media/day2.jpg",  # –ß–µ—Ä–µ–∑ 2 –¥–Ω—è
    "day4": "media/day4.jpg",  # –ß–µ—Ä–µ–∑ 4 –¥–Ω—è
}

CHAT_LINKS = {
    "main_chat": "https://t.me/+novjZfOZW9ozYTAy",  # –û—Å–Ω–æ–≤–Ω–æ–π –ö–∏–Ω–∫–∏ –•–∞–±
    "escort": "https://t.me/+lFxPJhQwd4U3YzYy",    # –í–∏—Ä—Ç —É—Å–ª—É–≥–∏ / —ç—Å–∫–æ—Ä—Ç
    "ua_chat": "https://t.me/golosovoy_chats_ukraina"  # –ß–∞—Ç –£–∫—Ä–∞–∏–Ω–∞
}

MESSAGES = {
    "ua": {
        "welcome": (
            "üî• –ü—Ä–∏–≤—ñ—Ç, {name}!\n"
            "–¢–∏ –ø–æ–¥–∞–≤ –∑–∞—è–≤–∫—É –¥–æ **KinkyHub** ‚Äî –º—ñ—Å—Ü—è, –¥–µ üîû –º–æ–¥–µ–ª—ñ –ø—Ä–æ–¥–∞—é—Ç—å –Ω—é–¥—Å–∏ —Ç–∞ —Ä–æ–±–ª—è—Ç—å –ø—Ä–∏–≤–∞—Ç –≤—ñ–¥–µ–æ–¥–∑–≤—ñ–Ω–∫–∏.\n\n"
            "üíé –©–æ –Ω–∞ —Ç–µ–±–µ —á–µ–∫–∞—î:\n"
            "üíã –ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ —Ñ–æ—Ç–æ —Ç–∞ –≤—ñ–¥–µ–æ –±–µ–∑ —Ü–µ–Ω–∑—É—Ä–∏\n"
            "üñ§ –ü—Ä–∏–≤–∞—Ç-—Å—Ç—Ä—ñ–º–∏ –ø—Ä—è–º–æ –≤ Telegram\n"
            "‚ú® –†–µ–∞–ª—å–Ω–µ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ –º–æ–¥–µ–ª—è–º–∏\n\n"
            "‚ö° –ù–∞—Ç–∏—Å–Ω–∏, –¥–æ–∫–∏ –¥–æ—Å—Ç—É–ø –≤—ñ–¥–∫—Ä–∏—Ç–∏–π üëá"
        ),
        "day2": (
            "üòà –ü–æ–¥–∏–≤–∏—Å—å, —â–æ –∑'—è–≤–∏–ª–æ—Å—è —Å—å–æ–≥–æ–¥–Ω—ñ:\n"
            "üì∏ –ù–æ–≤—ñ —Ñ–æ—Ç–æ —Ç–∞ –ø—Ä–∏–≤–∞—Ç –≤—ñ–¥ –º–æ–¥–µ–ª–µ–π\n"
            "üé• –ì–∞—Ä—è—á—ñ –≤—ñ–¥–µ–æ 18+\n"
            "üîì –£—Å–µ —Ü–µ –≤ **KinkyHub**\n\n"
            "üëâ –ó–∞—Ö–æ–¥—å –∑–∞—Ä–∞–∑: {main}"
        ),
        "day4": (
            "‚è≥ {name}, —Ç–≤—ñ–π –ø—Ä–æ–ø—É—Å–∫ —É **KinkyHub** —Å–∫–æ—Ä–æ –∑–∞–∫—Ä–∏—î—Ç—å—Å—è!\n\n"
            "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏:\n"
            "üíã –¥–æ—Å—Ç—É–ø –¥–æ –ø—Ä–∏–≤–∞—Ç—ñ–≤\n"
            "üì∏ –µ–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ —Ñ–æ—Ç–æ\n"
            "üíª –ø—Ä–∏–≤–∞—Ç-—á–∞—Ç–∏ –∑ –º–æ–¥–µ–ª—è–º–∏\n\n"
            "üëâ –£—Å—Ç–∏–≥–Ω–∏: {main}"
        )
    },
    "en": {
        "welcome": (
            "üî• Hi, {name}!\n"
            "You applied to **KinkyHub** ‚Äî the place where üîû models sell nudes and do private video calls.\n\n"
            "üíé What awaits you:\n"
            "üíã Exclusive uncensored photos & videos\n"
            "üñ§ Private streams right in Telegram\n"
            "‚ú® Real chats with models\n\n"
            "‚ö° Tap while access is open üëá"
        ),
        "day2": (
            "üòà Look what‚Äôs new today:\n"
            "üì∏ New photos & private shows from models\n"
            "üé• Hot 18+ videos\n"
            "üîì All this is in **KinkyHub**\n\n"
            "üëâ Join now: {main}"
        ),
        "day4": (
            "‚è≥ {name}, your pass to **KinkyHub** is closing soon!\n\n"
            "Don't miss:\n"
            "üíã access to privates\n"
            "üì∏ exclusive photos\n"
            "üíª private chats with models\n\n"
            "üëâ Hurry: {main}"
        )
    }
}

# ===== –§–£–ù–ö–¶–ò–ò =====

def get_keyboard(lang="ua"):
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üî• KinkyHub", callback_data="main_chat")],
        [InlineKeyboardButton("üíå –í—ñ—Ä—Ç / Escort", callback_data="escort")],
        [InlineKeyboardButton("üì¢ –ß–∞—Ç –£–∫—Ä–∞—ó–Ω–∞", callback_data="ua_chat")],
    ])

async def send_delayed_messages(bot, user_id, name, lang):
    # –î–µ–Ω—å 2 ‚Äî —á–µ—Ä–µ–∑ 2 –¥–Ω—è
    await asyncio.sleep(2 * 86400)
    try:
        await bot.send_photo(
            chat_id=user_id,
            photo=open(MEDIA_FILES["day2"], "rb"),
            caption=MESSAGES[lang]["day2"].format(main=CHAT_LINKS["main_chat"]),
            parse_mode="Markdown"
        )
    except:
        pass

    # –î–µ–Ω—å 4 ‚Äî —á–µ—Ä–µ–∑ 2 –¥–Ω—è (–∏—Ç–æ–≥–æ 4 –¥–Ω—è)
    await asyncio.sleep(2 * 86400)
    try:
        await bot.send_photo(
            chat_id=user_id,
            photo=open(MEDIA_FILES["day4"], "rb"),
            caption=MESSAGES[lang]["day4"].format(name=name, main=CHAT_LINKS["main_chat"]),
            parse_mode="Markdown"
        )
    except:
        pass

async def join_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.chat_join_request.from_user
    lang_code = "ua" if (user.language_code and user.language_code.startswith("uk")) else "en"

    try:
        await context.bot.send_photo(
            chat_id=user.id,
            photo=open(MEDIA_FILES["day0"], "rb"),
            caption=MESSAGES[lang_code]["welcome"].format(name=user.first_name),
            parse_mode="Markdown",
            reply_markup=get_keyboard(lang_code)
        )
        asyncio.create_task(send_delayed_messages(context.bot, user.id, user.first_name, lang_code))
    except:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {user.first_name}")

    await update.chat_join_request.approve()

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = query.from_user
    button_id = query.data

    # –õ–æ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫–∏
    with open("stats.txt", "a", encoding="utf-8") as f:
        f.write(f"{datetime.datetime.now()} | {user.id} | {user.first_name} | {button_id}\n")

    await query.answer()
    await context.bot.send_message(chat_id=user.id, text=f"üîó {CHAT_LINKS[button_id]}")

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(ChatJoinRequestHandler(join_request))
    app.add_handler(CallbackQueryHandler(button_click))
    print("‚úÖ BOT STARTED")
    app.run_polling()

if __name__ == "__main__":
    main()